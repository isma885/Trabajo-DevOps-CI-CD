stages:
  - secrets-scanning
  - code-linting
  - code-analysis
  - docker-linting
  - build

variables:
  ALUMNO: devops-grupo11
  TAG: devops-runner
  DOCKER_NETWORK: crud-users-net 
# 1.3 Build de codigo

dockerize-all:
  image: docker:24.0.2
  stage: build
  tags: [$TAG]
  variables:
    CA_CERTIFICATE: "$CA_CERTIFICATE"
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_BUILDKIT: "1"
    DOCKER_DRIVER: overlay2
  services:
    - name: docker:24.0.2-dind
      alias: docker
      command:
        - /bin/sh
        - -c
        - |
          echo "$CA_CERTIFICATE" > /usr/local/share/ca-certificates/my-ca.crt && update-ca-certificates && dockerd-entrypoint.sh || exit
  before_script:
    # Login al registro de Docker
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # Instalar docker-compose manualmente
    - apk add --no-cache docker-compose
    - docker-compose --version
    - apk add --no-cache curl
    - curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
    - /usr/local/bin/docker-compose --version  # Verifica la instalación de docker-compose
  script:
    # Construir y subir imágenes usando docker-compose
    - echo "Construyendo y subiendo todas las imágenes con docker-compose..."
    - docker-compose -f docker-compose.yml build --no-cache
    - docker-compose -f docker-compose.yml push
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - docker-compose.yaml  # Asegura que docker-compose.yml esté presente
  allow_failure: false